---
title: olifurz
category: 1
---

<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }} ~ olifurz :3</title>
    <link rel="stylesheet" href="/media/styles.css"/>
    <link rel="icon" type="image/x-icon" href="/media/favicon.ico">
    <style>
      .popup {
          display: none;
      }
      @keyframes exit {
          from {
              opacity: 1;
          }
          to {
              opacity: 0;
          }
      }
      @keyframes exitCard {
          from {
              opacity: 1;
          }
          to {
              opacity: 0;
              transform: scale(0);
          }
      }
      
      .container {
          width: 800px;
          display: flex;
          flex-direction: column;
          gap: 15px;
      }
      .content {
          display: flex;
          flex-direction: column;
          gap: 15px;
      }
      

      #topbar {
          border: 1px solid var(--surface0);
          
          transition: 0.5s;
          position: relative;
          
          width: 100%;
          display: block;
          
          z-index: 5;
          background-color: var(--mantle);
          padding: 0;
      }
     
      
      @keyframes marquee-scroll {
          0% { left: 100%; }
          100% { left: -100%; }
      }
      @keyframes marquee-fly-down {
          0% { top: -100%; }
          100% { top: 0; }
      }
      @keyframes marquee-fly-up {
          0% { top: 100%; }
          100% { top: 0; }
      }
      @keyframes marquee-fade {
          0% { opacity: 0; }
          100% { opacity: 1; }
      }

      .nav {
          display: flex;
          flex-direction: row;
          align-items: end;
          justify-content: space-evenly;
          height: 40px;
      }

      .nav > a {
          text-decoration: none;
          font-size: 24px;
          text-align: center;
          transition: 0.1s;
          width: 100%;
      }

      .nav > a::after {
          content: "";
          display: block;
          width: 100%;
          height: 1px;
          margin-top: 5px;
          transition: 0.1s;
      }

      .nav > a:hover {
          font-weight: 800;
          background-color: transparent;
      }
      .nav > a:hover::after {
          height: 4px;
          border-radius: 3px 3px 0 0;
      }
      
      .subnav {
          bottom: -30px;
          left: 0;
          height: 28px;
          
          display: flex;
          align-items: center;
      }
      .subnav:empty {
          display: none;
      }
      .subnav a {
          text-decoration: none;
      }
      .subnav a:hover {
          font-weight: bold;
          background-color: var(--pink);
          color: var(--base);
      }
      
      .subnav > a[data-color="red"]:hover { background-color: var(--red); }
      .subnav > a[data-color="yellow"]:hover { background-color: var(--yellow); }
      .subnav > a[data-color="green"]:hover { background-color: var(--green); }
      .subnav > a[data-color="blue"]:hover { background-color: var(--blue); }
      .subnav > a[data-color="mauve"]:hover { background-color: var(--mauve); }
      .nav > a[data-color="red"]::before { content: ""; }
      .nav > a[data-color="yellow"]::before { content: ""; }
      .nav > a[data-color="green"]::before { content: ""; }
      .nav > a[data-color="blue"]::before { content: ""; }
      .nav > a[data-color="mauve"]::before { content: ""; }
      .nav > a[data-color="red"]::after { background-color: var(--red); }
      .nav > a[data-color="yellow"]::after { background-color: var(--yellow); }
      .nav > a[data-color="green"]::after { background-color: var(--green); }
      .nav > a[data-color="blue"]::after { background-color: var(--blue); }
      .nav > a[data-color="mauve"]::after { background-color: var(--mauve); }
    </style>
  </head>
  <body>
    <div class="popup" id="popup">
        <div class="card" id="warningCard">
            <h1>warning!</h1>
            <p>this site contains the following content</p>
            <ul>
                <li>cookies</li>
                <li>un-mobile-friendly pages</li>
                <li>sexual references/themes</li>
            </ul>
            <button id="warningConfirm" type="submit">enter</button>
        </div>
    </div>
    <div class="background"></div>
    <div class="container">
        <div class="card" id="topbar">
            <div>
                <h1 style="font-size: 56px; font-weight: 800; color: var(--pink); text-align: center;">
                    olifurz<span style="font-size: 50%;">.com
                </span></h1>
                <div class="nav">
                    <a id="a" href="/" data-color="red">home</a>
                    <a id="b" href="/me" data-color="yellow">me</a>
                    <a id="c" href="/work" data-color="green">work</a>
                    <a id="d" href="/blog" data-color="blue">blog</a>
                    <a id="e" href="/talk" data-color="mauve">talk</a>
                </div>
            </div>
            <div style="background-color: var(--base); padding: 10px 10px; display: flex; justify-content: space-between; align-items: center;">
                <span>
                  <span style="color: var(--subtext0)" id="path"></span> ~ <span style="color: var(--pink); font-weight: bold;">{{ title }}</span>
                </span>
                <span id="details"></span>
            </div>

        </div>

        <div class="content">
            {{ content }}
        </div>
    </div>
    <p style="color: var(--overlay0)">&copy; olifurz 2025 - <b style="color: var(--yellow); opacity: 0.6;">site in active wip!</b> - <button id="toggleAnimButton" onclick="toggleAnimations()">disable animations</button></p>
  </body>

  <script>
      document.addEventListener("DOMContentLoaded", function () {
          function getCookieByName(name) {
              const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
              if (match) return decodeURIComponent(match[2]);
              return null;
          }

          let hasAcceptedWarning = getCookieByName("acceptedWarning");

          if (!hasAcceptedWarning) {
              document.getElementById('popup').style.display = 'flex';
          }

          document.getElementById("warningConfirm").onclick = function () {
              document.cookie = "acceptedWarning=true";

              const popup = document.getElementById('popup');
              popup.style.animation = "exit 0.2s linear";
              const warningCard = document.getElementById('warningCard');
              warningCard.style.animation = "exitCard 0.2s ease-in";

              setTimeout(() => {
                  popup.style.display = 'none';
              }, 200);
          };

          const toggleAnimButton = document.getElementById('toggleAnimButton');

          if (getCookieByName("noAnimations") === "true") {
              document.body.classList.add("noAnimations");
              toggleAnimButton.innerText = "enable animations";
          } else {
              toggleAnimButton.innerText = "disable animations";
          }

          window.toggleAnimations = function () {
              if (document.body.classList.contains("noAnimations")) {
                  document.body.classList.remove("noAnimations");
                  document.cookie = "noAnimations=false";
                  toggleAnimButton.innerText = "disable animations";
              } else {
                  document.body.classList.add("noAnimations");
                  document.cookie = "noAnimations=true";
                  toggleAnimButton.innerText = "enable animations";
              }
          }

          // Navbar
          const pathText = document.getElementById("path");
          const paths = window.location.pathname.split("/").filter(Boolean);
          let pathHtml = `/<a href="/">home</a>/`;
          let currentPath = "";

          for (let i = 0; i < paths.length; i++) {
              currentPath += "/" + paths[i];
              pathHtml += `<a href="${currentPath}">${paths[i]}</a>/`;
          }
          pathText.innerHTML = pathHtml;



          const detailText = document.getElementById("details");

          detailText.innerText = `took ${performance.now()}ms`;



          // Visit counter
          const ref = document.referrer;
          const myDomain = location.hostname;
          
          if (!ref || !ref.includes(myDomain)) {
              fetch('/api/visit', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ url: location.href, referrer: ref || null })
              }).catch(console.error);
          }
      });
  </script>
</html>
